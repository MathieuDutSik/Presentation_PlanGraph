%!PS-Adobe-2.0 EPSF-2.0
%%Title: ChoiceResult.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Wed Jul 23 18:46:32 2003
%%For: dutour@orge (Mathieu Dutour)
%%BoundingBox: 0 0 479 168
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 168 moveto 0 0 lineto 479 0 lineto 479 168 lineto closepath clip newpath
-8.2 166.5 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<00030003000c000c0030003000c000c0030003000c000c00
	30003000c000c00000030003000c000c0030003000c000c0
	030003000c000c0030003000c000c000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P2 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
/Times-Roman ff 360.00 scf sf
2175 2775 m
gs 1 -1 sc (i=1) col0 sh gr
% Arc
7.500 slw
n 6600.0 1215.0 915.0 -169.6 -10.4 arc
gs col0 s gr

% Arc
 [15 45] 45 sd
n 6399.1 1239.4 1251.5 168.0 -1.8 arc
gs col0 s gr
 [] 0 sd
% Polyline
n 750 1650 m 1200 1350 l 1200 1950 l
 750 1650 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 50.00 90.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 1350 m
 1500 1050 l gs col0 s gr 
% Polyline
n 1500 1050 m 1800 1350 l 2100 1050 l
 1500 1050 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 100.00 70.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 1950 m 1500 2250 l 1800 1950 l 2100 2250 l 2400 1950 l 2700 2250 l

 3000 1950 l gs col0 s gr 
% Polyline
n 2100 1050 m 2400 1350 l 2700 1050 l
 3000 1350 l gs col0 s gr 
% Polyline
n 3000 1350 m
 3000 1950 l gs col0 s gr 
% Polyline
n 1800 1350 m
 1800 1950 l gs col0 s gr 
% Polyline
n 2400 1350 m
 2400 1950 l gs col0 s gr 
% Polyline
n 3000 1350 m 3300 1050 l 3600 1350 l
 3900 1050 l gs col0 s gr 
% Polyline
n 3000 1950 m 3300 2250 l 3600 1950 l
 3900 2250 l gs col0 s gr 
% Polyline
n 3600 1350 m
 3600 1950 l gs col0 s gr 
% Polyline
n 4950 1650 m 5400 1350 l 5400 1950 l
 4950 1650 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 330.00 90.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 5400 1350 m 5700 1050 l 6000 1350 l
 6300 1050 l gs col0 s gr 
% Polyline
n 6300 1050 m 6600 1350 l 6900 1050 l
 6300 1050 l  cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 420.00 70.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 6900 1050 m 7200 1350 l 7500 1050 l 7800 1350 l
 8100 1050 l gs col0 s gr 
% Polyline
n 5400 1950 m 5700 2250 l 6000 1950 l 6300 2250 l 6600 1950 l 6900 2250 l
 7200 1950 l 7500 2250 l 7800 1950 l
 8100 2250 l gs col0 s gr 
% Polyline
n 7800 1350 m
 7800 1950 l gs col0 s gr 
% Polyline
n 7200 1350 m
 7200 1950 l gs col0 s gr 
% Polyline
n 6600 1350 m
 6600 1950 l gs col0 s gr 
% Polyline
n 6000 1350 m
 6000 1950 l gs col0 s gr 
% Polyline
 [15 45] 45 sd
n 7650 1200 m
 7350 2100 l gs col0 s gr  [] 0 sd
% Polyline
2 slj
 [15 45] 45 sd
n 3150 1200 m
 3450 2100 l gs col0 s gr  [] 0 sd
% Polyline
 [15 45] 45 sd
n 975 1800 m 974 1801 l 972 1804 l 969 1810 l 963 1818 l 956 1830 l
 947 1844 l 935 1860 l 922 1879 l 907 1899 l 891 1920 l
 874 1941 l 856 1961 l 838 1981 l 818 1999 l 798 2015 l
 777 2029 l 755 2041 l 732 2049 l 708 2054 l 683 2055 l
 656 2050 l 628 2041 l 600 2025 l 576 2007 l 553 1986 l
 532 1963 l 512 1940 l 494 1918 l 478 1896 l 463 1876 l
 450 1857 l 438 1840 l 428 1824 l 418 1810 l 410 1796 l
 401 1782 l 394 1769 l 386 1755 l 379 1740 l 372 1724 l
 364 1707 l 356 1687 l 349 1664 l 341 1638 l 333 1608 l
 325 1574 l 317 1536 l 311 1494 l 305 1449 l 301 1400 l
 300 1350 l 301 1299 l 305 1250 l 310 1204 l 316 1162 l
 322 1124 l 328 1092 l 334 1063 l 339 1039 l 343 1019 l
 348 1003 l 352 989 l 355 977 l 359 966 l 363 956 l
 367 947 l 371 936 l 377 925 l 384 911 l 393 896 l
 404 877 l 417 855 l 433 829 l 452 799 l 475 765 l
 501 727 l 531 686 l 564 643 l 600 600 l 638 558 l
 677 519 l 714 483 l 749 451 l 780 423 l 808 399 l
 832 379 l 852 362 l 870 348 l 884 336 l 896 327 l
 907 319 l 916 312 l 925 306 l 934 301 l 944 295 l
 956 289 l 970 282 l 987 274 l 1008 264 l 1033 254 l
 1063 241 l 1098 228 l 1139 213 l 1185 197 l 1236 180 l
 1292 165 l 1350 150 l 1405 139 l 1459 129 l 1510 122 l
 1557 117 l 1600 113 l 1638 110 l 1672 109 l 1701 108 l
 1726 109 l 1747 109 l 1765 110 l 1781 112 l 1795 114 l
 1807 116 l 1819 119 l 1830 122 l 1842 125 l 1856 128 l
 1871 132 l 1888 136 l 1908 141 l 1932 146 l 1959 152 l
 1991 159 l 2026 167 l 2065 176 l 2108 186 l 2154 198 l
 2202 211 l 2250 225 l 2308 244 l 2360 264 l 2406 283 l
 2445 301 l 2477 316 l 2502 329 l 2521 339 l 2535 348 l
 2544 354 l 2550 360 l 2554 364 l 2556 369 l 2559 373 l
 2561 379 l 2566 386 l 2573 395 l 2583 406 l 2598 421 l
 2616 440 l 2640 464 l 2668 492 l 2701 524 l 2737 560 l
 2775 600 l 2809 638 l 2841 676 l 2871 713 l 2899 750 l
 2925 785 l 2948 819 l 2969 851 l 2989 883 l 3008 914 l
 3025 944 l 3041 973 l 3056 1001 l 3070 1029 l 3083 1055 l
 3096 1080 l 3107 1104 l 3117 1125 l 3125 1144 l 3133 1160 l
 3139 1174 l 3143 1184 l 3146 1191 l 3148 1196 l 3149 1199 l

 3150 1200 l gs col0 s gr  [] 0 sd
% Polyline
n 3300 1050 m 3300 1049 l 3299 1047 l 3297 1042 l 3294 1035 l 3289 1026 l
 3283 1013 l 3276 997 l 3267 979 l 3257 957 l 3246 934 l
 3232 908 l 3218 880 l 3202 851 l 3185 820 l 3167 789 l
 3147 757 l 3126 724 l 3104 691 l 3080 658 l 3054 624 l
 3026 590 l 2996 555 l 2963 519 l 2927 483 l 2888 447 l
 2846 410 l 2800 373 l 2751 336 l 2700 300 l 2647 266 l
 2595 235 l 2545 206 l 2498 181 l 2456 159 l 2419 139 l
 2386 123 l 2359 109 l 2335 97 l 2316 87 l 2300 79 l
 2287 72 l 2276 66 l 2266 61 l 2256 56 l 2247 52 l
 2236 48 l 2224 44 l 2209 40 l 2192 36 l 2170 31 l
 2143 27 l 2111 22 l 2073 17 l 2029 12 l 1979 7 l
 1923 3 l 1861 0 l 1794 -1 l 1725 0 l 1663 3 l
 1603 8 l 1544 14 l 1489 21 l 1439 27 l 1392 34 l
 1350 40 l 1312 45 l 1279 50 l 1250 54 l 1224 57 l
 1202 60 l 1182 62 l 1164 64 l 1148 66 l 1133 67 l
 1119 69 l 1105 71 l 1090 73 l 1075 77 l 1058 82 l
 1040 88 l 1019 96 l 996 105 l 969 118 l 940 132 l
 907 150 l 870 171 l 831 196 l 788 225 l 742 257 l
 695 293 l 647 332 l 600 375 l 557 418 l 517 461 l
 480 504 l 446 547 l 416 587 l 388 625 l 364 660 l
 343 693 l 324 722 l 308 749 l 294 773 l 282 795 l
 272 815 l 263 833 l 255 849 l 249 865 l 243 879 l
 237 894 l 233 908 l 228 923 l 223 940 l 218 957 l
 214 976 l 208 997 l 203 1021 l 197 1048 l 191 1078 l
 185 1112 l 178 1149 l 172 1190 l 165 1234 l 160 1283 l
 155 1334 l 151 1388 l 149 1444 l 150 1500 l 154 1559 l
 160 1616 l 169 1670 l 178 1720 l 189 1767 l 200 1809 l
 211 1847 l 222 1881 l 233 1911 l 243 1937 l 253 1960 l
 262 1981 l 271 1999 l 280 2015 l 289 2030 l 297 2043 l
 306 2056 l 315 2069 l 325 2081 l 335 2094 l 347 2108 l
 359 2123 l 373 2139 l 389 2156 l 407 2175 l 426 2196 l
 449 2219 l 473 2243 l 501 2269 l 531 2296 l 563 2323 l
 599 2350 l 636 2376 l 675 2400 l 720 2423 l 766 2441 l
 811 2454 l 855 2463 l 898 2469 l 940 2471 l 980 2469 l
 1019 2466 l 1057 2459 l 1094 2451 l 1130 2441 l 1165 2429 l
 1199 2415 l 1233 2401 l 1266 2386 l 1297 2370 l 1327 2354 l
 1356 2339 l 1382 2324 l 1406 2309 l 1428 2296 l 1447 2285 l
 1463 2275 l 1475 2266 l 1485 2260 l 1492 2255 l 1497 2252 l
 1499 2251 l
 1500 2250 l gs col0 s gr 
/Times-Roman ff 360.00 scf sf
6375 2775 m
gs 1 -1 sc (i=2) col0 sh gr
% Arc
n 1710.8 1303.7 1021.3 160.2 -14.4 arc
gs col0 s gr

% here ends figure;
$F2psEnd
rs
end
showpage
